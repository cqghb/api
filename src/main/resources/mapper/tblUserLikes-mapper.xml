<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.api.api.dao.TblUserLikesDao">
  <resultMap id="BaseResultMap" type="com.test.api.api.bean.TblUserLikes">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="title_code" jdbcType="VARCHAR" property="titleCode" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title_code, user_id, create_user, create_time, update_user, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_user_likes
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="queryUserLikeIds" parameterType="java.lang.String" resultType="java.lang.String">
    select
    title_code
    from tbl_user_likes
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tbl_user_likes
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByUserId" parameterType="java.lang.String">
    delete from tbl_user_likes
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.test.api.api.bean.TblUserLikes" useGeneratedKeys="true">
    insert into tbl_user_likes (title_code, user_id, create_user, 
      create_time, update_user, update_time
      )
    values (#{titleCode,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.test.api.api.bean.TblUserLikes">
    insert into tbl_user_likes
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null and id != ''">
        id,
      </if>
      <if test="titleCode != null">
        title_code,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
        create_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null and id != ''">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="titleCode != null">
        #{titleCode,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      sysdate()

    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.api.api.bean.TblUserLikes">
    update tbl_user_likes
    <set>
      <if test="titleCode != null">
        title_code = #{titleCode,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.api.api.bean.TblUserLikes">
    update tbl_user_likes
    set title_code = #{titleCode,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>