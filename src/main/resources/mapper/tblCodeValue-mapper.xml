<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.api.api.dao.TblCodeValueDao">
  <resultMap id="BaseResultMap" type="com.test.api.api.bean.TblCodeValue">
    <id column="code_type" jdbcType="VARCHAR" property="codeType" />
    <id column="code" jdbcType="VARCHAR" property="code" />
    <id column="code_name" jdbcType="VARCHAR" property="codeName" />
    <result column="index" jdbcType="INTEGER" property="index" />
    <result column="del_tag" jdbcType="VARCHAR" property="delTag" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    code_type, code, code_name, `index`, create_user, create_time, update_user, update_time, del_tag, remark
  </sql>

  <resultMap id="BaseResultMap2" type="com.test.api.api.vo.CodeValueVO">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="INTEGER" property="name" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="operate_addr" jdbcType="VARCHAR" property="operateAddr" />
  </resultMap>
<!--  <sql id="Base_Column_List2">-->
<!--    code id, code_name `name`, '' operate_addr, remark-->
<!--  </sql>-->

  <select id="selectByPrimaryKey" parameterType="com.test.api.api.bean.TblCodeValueKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_code_value
    where code_type = #{codeType,jdbcType=VARCHAR}
      and code = #{code,jdbcType=VARCHAR}
      and code_name = #{codeName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.test.api.api.bean.TblCodeValueKey">
    delete from tbl_code_value
    where code_type = #{codeType,jdbcType=VARCHAR}
      and code = #{code,jdbcType=VARCHAR}
      and code_name = #{codeName,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="code_type" keyProperty="codeType" parameterType="com.test.api.api.bean.TblCodeValue" useGeneratedKeys="true">
    insert into tbl_code_value (code, code_name, `index`, 
      create_user, create_time, update_user, 
      update_time)
    values (#{code,jdbcType=VARCHAR}, #{codeName,jdbcType=VARCHAR}, #{index,jdbcType=INTEGER}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="code_type" keyProperty="codeType" parameterType="com.test.api.api.bean.TblCodeValue" useGeneratedKeys="true">
    insert into tbl_code_value
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        code,
      </if>
      <if test="codeName != null">
        code_name,
      </if>
      <if test="index != null">
        `index`,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="codeName != null">
        #{codeName,jdbcType=VARCHAR},
      </if>
      <if test="index != null">
        #{index,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.api.api.bean.TblCodeValue">
    update tbl_code_value
    <set>
      <if test="index != null">
        `index` = #{index,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where code_type = #{codeType,jdbcType=VARCHAR}
      and code = #{code,jdbcType=VARCHAR}
      and code_name = #{codeName,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.api.api.bean.TblCodeValue">
    update tbl_code_value
    set `index` = #{index,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where code_type = #{codeType,jdbcType=VARCHAR}
      and code = #{code,jdbcType=VARCHAR}
      and code_name = #{codeName,jdbcType=VARCHAR}
  </update>

  <select id="searchCodeKeyValue" parameterType="com.test.api.api.bo.CodeValueBO" resultType="java.util.Map">
    SELECT t.`code` as value,t.code_name label
    from tbl_code_value t
    WHERE t.code_type = #{codeType, jdbcType=VARCHAR}
    <if test="codeList != null and codeList.size()>0">
      and t.code in
      <foreach collection="codeList" item="item" index="i" open="(" close=")" separator=",">
        #{item, jdbcType=VARCHAR}
      </foreach>
    </if>
    ORDER BY t.`index` ASC
  </select>

  <select id="queryDataOperateSubgroup" parameterType="com.test.api.api.bean.TblCodeValue" resultMap="BaseResultMap2">
    select
    DISTINCT t1.`code` id, t1.code_name `name`, '' operate_addr, t1.remark
    from tbl_code_value t1 LEFT JOIN tbl_data_operate t2 on t1.`code` = t2.subgroup
    <where>
      t1.code_type='dataOperateSubgroup' AND t2.id is not null
      <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(id)">
        and t1.id = #{id,jdbcType=VARCHAR}
      </if>
      <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(codeName)">
        and t1.code_name like concat('%', #{codeName,jdbcType=VARCHAR}, '%')
      </if>
      <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(codeType)">
        and t1.code_type = #{codeType,jdbcType=VARCHAR}
      </if>
      <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(delTag)">
        and t1.del_tag = #{delTag,jdbcType=VARCHAR}
      </if>
    </where>

  </select>
</mapper>