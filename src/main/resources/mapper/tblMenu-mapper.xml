<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.test.api.api.dao.TblMenuDao">
    <resultMap id="BaseResultMap" type="com.test.api.api.bean.TblMenu">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="icon" property="icon" jdbcType="VARCHAR"/>
        <result column="parent_node" property="parentNode" jdbcType="VARCHAR"/>
        <result column="default_select" property="defaultSelect" jdbcType="VARCHAR"/>
        <result column="uri" property="uri" jdbcType="VARCHAR"/>
        <result column="children_flag" property="childrenFlag" jdbcType="VARCHAR"/>
        <result column="create_user" property="createUser" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_user" property="updateUser" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="baseField">
        id, name, icon, parent_node, default_select, uri, create_user, create_time, update_user, update_time,
        children_flag
    </sql>
    <!--  暂时不用  -->
    <sql id="baseField2">
        ${alias}.id, ${alias}.name, ${alias}.icon, ${alias}.parent_node, ${alias}.default_select, ${alias}.uri,
        ${alias}.create_user, ${alias}.create_time, ${alias}.update_user, ${alias}.update_time,
        ${alias}.children_flag
    </sql>
    <select id="queryList" parameterType="com.test.api.api.bean.TblMenu" resultMap="BaseResultMap">
        select
        <include refid="baseField"/>
        from tbl_menu t
        <where>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(id)">
                and t.id = #{id, jdbcType=VARCHAR}
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(name)">
                and t.name = concat('%', #{name,jdbcType=VARCHAR}, '%')
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(parentNode)">
                and t.parent_node = #{parentNode, jdbcType=VARCHAR}
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(delTag)">
                and t.del_tag = #{delTag,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <select id="queryDefaultSelect" resultType="java.lang.String">
        select id from tbl_menu t where t.default_select = '1' and t.parent_node = '0'
    </select>

    <insert id="insertSelective" parameterType="com.test.api.api.bean.TblMenu">
        insert into tbl_menu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null and id !=''">
                id,
            </if>
            <if test="name != null and name !=''">
                `name`,
            </if>
            <if test="icon != null and icon !=''">
                icon,
            </if>
            <if test="parentNode != null and parentNode != ''">
                parent_node,
            </if>
            <if test="defaultSelect != null and defaultSelect != ''">
                default_select,
            </if>
            <if test="uri != null and uri != ''">
                uri,
            </if>
            <if test="createUser != null and createUser != ''">
                create_user,
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(childrenFlag)">
                children_flag,
            </if>
            create_time
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null and id != ''">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="name != null and name !=''">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="icon != null and icon !=''">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="parentNode != null and parentNode != ''">
                #{parentNode,jdbcType=VARCHAR},
            </if>
            <if test="defaultSelect != null and defaultSelect != ''">
                #{defaultSelect,jdbcType=VARCHAR},
            </if>
            <if test="uri != null and uri != ''">
                #{uri,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null and createUser != ''">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(childrenFlag)">
                #{childrenFlag,jdbcType=VARCHAR},
            </if>
            sysdate()

        </trim>
    </insert>

    <delete id="deleteById" parameterType="java.lang.String">
        delete from tbl_menu t where t.id = #{id,jdbcType=VARCHAR}
    </delete>

    <select id="selectByPKDelTag" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="baseField"/>
        from tbl_menu t
        where t.id = #{id, jdbcType=VARCHAR}
        <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(delTag)">
            and del_tag = #{delTag,jdbcType=VARCHAR}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="baseField"/>
        from tbl_menu t
        where t.id = #{id, jdbcType=VARCHAR}
    </select>

    <select id="queryPageParentMenu" parameterType="com.test.api.api.dto.menumanager.QueryParentMenuParamsDto" resultMap="BaseResultMap">
        SELECT a.* FROM (
            SELECT t3.* FROM (
            SELECT DISTINCT t1.parent_node FROM tbl_menu t1 ) t2
            LEFT JOIN tbl_menu t3 ON t2.parent_node=t3.id
            WHERE t3.id!=''
            UNION
            SELECT t.* FROM tbl_menu t where t.parent_node = '0'
        ) a
        <where>
            <if test="id != null and id != ''">
                and a.id = #{id,jdbcType=VARCHAR}
            </if>
            <if test="name != null and name !=''">
                and a.name like concat('%', #{name,jdbcType=VARCHAR}, '%')
            </if>
            <if test="theId != null and theId != ''">
                and a.id != #{theId,jdbcType=VARCHAR}
            </if>
        </where>

    </select>

    <update id="updateByPrimaryKeySelective" parameterType="com.test.api.api.bean.TblMenu">
        update tbl_menu
        <set>
            <if test="name != null and name !=''">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="icon != null and icon !=''">
                icon = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="parentNode != null and parentNode != ''">
                parent_node = #{parentNode,jdbcType=VARCHAR},
            </if>
            <if test="defaultSelect != null and defaultSelect != ''">
                default_select = #{defaultSelect,jdbcType=VARCHAR},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(childrenFlag)">
                children_flag = #{childrenFlag,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(uri)">
                uri = #{uri,jdbcType=VARCHAR},
            </if>
            update_time = sysdate()
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="queryUserMenu" parameterType="string" resultMap="BaseResultMap">
        SELECT DISTINCT t4.* FROM tbl_user t1
        LEFT JOIN tbl_role_user_relation t2 ON t1.id = t2.user_id
        LEFT JOIN tbl_role_menu_relation t3 ON t2.role_id = t3.role_id
        LEFT JOIN tbl_menu t4 ON t3.menu_id = t4.id
        <where>
            t1.del_tag = '2'
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(userNo)">
                and t1.id = #{userNo,jdbcType=VARCHAR}
            </if>
            AND t2.del_tag = '2'
            AND t3.del_tag = '2'
            AND t4.del_tag = '2'
        </where>

    </select>
</mapper>