<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.api.api.dao.TblSpuDao">
    <resultMap id="BaseResultMap" type="com.test.api.api.bean.TblSpu">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="brief_introduction" jdbcType="VARCHAR" property="briefIntroduction"/>
        <result column="detail" jdbcType="VARCHAR" property="detail"/>
        <result column="type_id" jdbcType="VARCHAR" property="typeId"/>
        <result column="brand_id" jdbcType="VARCHAR" property="brandId"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="del_tag" jdbcType="VARCHAR" property="delTag"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, `name`, code, brief_introduction, detail, type_id, brand_id, create_user, create_time,
        update_user, update_time, del_tag, remark
    </sql>
    <resultMap id="ListResultMap" type="com.test.api.api.vo.commodity.spu.ListSpuVO">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="brief_introduction" jdbcType="VARCHAR" property="briefIntroduction"/>
        <result column="detail" jdbcType="VARCHAR" property="detail"/>
        <result column="type_name" jdbcType="VARCHAR" property="typeName"/>
        <result column="brand_name" jdbcType="VARCHAR" property="brandName"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="del_tag" jdbcType="VARCHAR" property="delTag"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tbl_spu
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <select id="queryByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tbl_spu
        where code = #{code,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from tbl_spu
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.test.api.api.bean.TblSpu"
            useGeneratedKeys="true">
    insert into tbl_spu (`name`, code, brief_introduction, 
      detail, type_id, brand_id, 
      create_user, create_time, del_tag, remark
      )
    values (#{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{briefIntroduction,jdbcType=VARCHAR}, 
      #{detail,jdbcType=VARCHAR}, #{typeId,jdbcType=VARCHAR}, #{brandId,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=VARCHAR}, sysdate(), #{delTag,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.test.api.api.bean.TblSpu">
        insert into tbl_spu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(id)">
                id,
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(name)">
                `name`,
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(code)">
                code,
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(briefIntroduction)">
                brief_introduction,
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(detail)">
                detail,
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(typeId)">
                type_id,
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(brandId)">
                brand_id,
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(createUser)">
                create_user,
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(delTag)">
                del_tag,
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(remark)">
                remark,
            </if>
            create_time
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(id)">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(name)">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(code)">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(briefIntroduction)">
                #{briefIntroduction,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(detail)">
                #{detail,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(typeId)">
                #{typeId,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(brandId)">
                #{brandId,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(createUser)">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(delTag)">
                #{delTag,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(remark)">
                #{remark,jdbcType=VARCHAR},
            </if>
            sysdate()
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.test.api.api.bean.TblSpu">
        update tbl_spu
        <set>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(name)">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(code)">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(briefIntroduction)">
                brief_introduction = #{briefIntroduction,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(detail)">
                detail = #{detail,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(typeId)">
                type_id = #{typeId,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(brandId)">
                brand_id = #{brandId,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(updateUser)">
                update_user = #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(delTag)">
                del_tag = #{delTag,jdbcType=VARCHAR},
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(remark)">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            update_time = sysdate()
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.test.api.api.bean.TblSpu">
    update tbl_spu
    set `name` = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      brief_introduction = #{briefIntroduction,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=VARCHAR},
      brand_id = #{brandId,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = sysdate(),
      del_tag = #{delTag,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="queryList" parameterType="com.test.api.api.bean.TblSpu" resultMap="ListResultMap">
      SELECT
      t1.id,
      t1.`name`,
      t1.`code`,
      concat_ws( '-', t3.id, t3.`name` ) AS type_name,
      concat_ws( '-', t2.id, t2.`name` ) AS brand_name,
      t1.create_time,
      t1.create_user,
      t1.update_time,
      t1.update_user,
      t1.remark,
      t1.brief_introduction,
      t1.detail,
      t1.del_tag
      FROM
      tbl_spu t1
      LEFT JOIN tbl_spu_brand t2 ON t1.brand_id = t2.id
      LEFT JOIN tbl_spu_type t3 ON t1.type_id = t3.id
    <where>
        <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(id)">
            and t1.id = #{id,jdbcType=VARCHAR}
        </if>
        <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(code)">
            and t1.code = #{code,jdbcType=VARCHAR}
        </if>
        <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(name)">
            and t1.`name` like concat('%', #{name,jdbcType=VARCHAR}, '%')
        </if>
        <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(delTag)">
            and t1.del_tag = #{delTag,jdbcType=VARCHAR}
        </if>
        <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(brandId)">
            and t2.id = #{brandId,jdbcType=VARCHAR}
        </if>
        <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(typeId)">
            and t3.id = #{typeId,jdbcType=VARCHAR}
        </if>
    </where>
  </select>

  <update id="updateDelTag" parameterType="com.test.api.api.bean.TblSpu">
    update tbl_spu
    <set>
      <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(delTag)">
        del_tag = #{delTag,jdbcType=VARCHAR},
      </if>
      <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(remark)">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(updateUser)">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      update_time = sysdate()
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

    <select id="selectDetail" parameterType="java.lang.String" resultMap="ListResultMap">
        SELECT
        t1.id,
        t1.`name`,
        t1.`code`,
        t1.detail,
        concat_ws( '-', t3.id, t3.`name` ) AS type_name,
        concat_ws( '-', t2.id, t2.`name` ) AS brand_name,
        t1.create_time,
        t1.create_user,
        t1.update_time,
        t1.update_user,
        t1.remark,
        t1.del_tag
        FROM
        tbl_spu t1
        LEFT JOIN tbl_spu_brand t2 ON t1.brand_id = t2.id
        LEFT JOIN tbl_spu_type t3 ON t1.type_id = t3.id
        where t1.id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="searchList" parameterType="com.test.api.api.bean.TblSpu" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tbl_spu
        <where>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(id)">
                and id = #{id,jdbcType=VARCHAR}
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(code)">
                and code = #{code,jdbcType=VARCHAR}
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(name)">
                and `name` = #{name,jdbcType=VARCHAR}
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(delTag)">
                and del_tag = #{delTag,jdbcType=VARCHAR}
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(brandId)">
                and brand_id = #{brandId,jdbcType=VARCHAR}
            </if>
            <if test="@com.test.api.api.utils.StringUtil@objIsNotEmpty(typeId)">
                and type_id = #{typeId,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
</mapper>